services:
  db:
    image: postgres:16-alpine
    container_name: foodgram-db
    restart: always
    volumes:
      - pg_data:/var/lib/postgresql/data/
    env_file:
      - ../.env
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata

  backend:
    container_name: foodgram-backend
    build:
      context: ..
      dockerfile: Dockerfile
    restart: always
    volumes:
      - static_volume:/app/staticfiles/
      - media_volume:/app/mediafiles/
    depends_on:
      - db
    expose:
      - "8000"
    env_file:
      - ../.env

  frontend:
    container_name: foodgram-frontend-builder
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend/:/app/
  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static_volume:/app/backend_static/
      - media_volume:/app/backend_media/
    depends_on:
      - backend

volumes:
  pg_data:
  static_volume:
  media_volume: